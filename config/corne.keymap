/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        utils_layer {
            bindings = <&mo 4>;
            key-positions = <24 35>;
            layers = <0>;
        };

        cw_right {
            bindings = <&caps_word>;
            key-positions = <19 7>;
            layers = <0>;
        };

        cap_v {
            bindings = <&kp LS(V)>;
            key-positions = <28 16>;
        };

        cw_left {
            bindings = <&none>;
            key-positions = <4 16>;
        };
    };

    macros {
        paste_vim: paste_vim {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp N0 &kp P>;
            label = "PASTE_VIM";
        };
    };

    behaviors {
        short_layer: short_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SHORT_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            quick-tap-ms = <50>;
            retro-tap;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <170>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        upper_v: upper_v {
            compatible = "zmk,behavior-tap-dance";
            label = "UPPER_V";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp RS(V)>;

            tapping-term-ms = <150>;
        };

        paste: paste {
            compatible = "zmk,behavior-tap-dance";
            label = "PASTE";
            #binding-cells = <0>;
            bindings = <&kp P>, <&paste_vim>;

            tapping-term-ms = <150>;
        };

        hrl: hrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HRL";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <170>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        tdj: tdj {
            compatible = "zmk,behavior-tap-dance";
            label = "J";
            #binding-cells = <0>;
            bindings = <&hrm RSHFT J>, <&hr 0 0>;

            tapping-term-ms = <100>;
        };

        hr: hold_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "HR";
            bindings = <&key_repeat>, <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <50>;
            flavor = "balanced";
        };

        tdh: tdh {
            compatible = "zmk,behavior-tap-dance";
            label = "H";
            #binding-cells = <0>;
            bindings = <&hrm RSHFT H>, <&hr 0 0>;

            tapping-term-ms = <100>;
        };

        tdk: tdk {
            compatible = "zmk,behavior-tap-dance";
            label = "K";
            #binding-cells = <0>;
            bindings = <&hrm RCTRL K>, <&hr 0 0>;

            tapping-term-ms = <100>;
        };

        tdl: tdl {
            compatible = "zmk,behavior-tap-dance";
            label = "L";
            #binding-cells = <0>;
            bindings = <&hrm RSHFT L>, <&hr 0 0>;

            tapping-term-ms = <100>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_BEHAVIOR";
            #binding-cells = <0>;
            bindings = <&hrm RALT K>, <&hr 0 0>;

            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp GRAVE       &kp Q         &kp W            &kp E               &kp R          &kp T           &kp Y         &kp U          &kp I             &kp O    &paste           &kp EQUAL
&hrm GLOBE TAB  &hrm LMETA A  &hrm LEFT_ALT S  &hrm LCTRL D        &hrm LSHFT F   &kp G           &tdh          &tdj           &tdk              &tdl     &hrm RMETA SEMI  &hrm GLOBE SQT
&kp BACKSLASH   &kp Z         &kp X            &kp C               &kp V          &kp B           &kp N         &kp M          &kp COMMA         &kp DOT  &hrl 1 SLASH     &kp MINUS
                                               &hrm LMETA PERCENT  &hrl 2 ESCAPE  &hrl 3 SPACE    &hrl 1 ENTER  &kp BACKSPACE  &hrm RMETA UNDER
            >;
        };

        numbers_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Nums";
            bindings = <
&trans  &kp KP_MULTIPLY       &kp N7  &kp N8  &kp N9         &kp MINUS                &trans    &kp W                  &kp E                &trans           &trans  &trans
&trans  &kp LEFT_PARENTHESIS  &kp N4  &kp N5  &kp N6         &kp RIGHT_PARENTHESIS    &kp LEFT  &hrm RIGHT_SHIFT DOWN  &hrm RCTRL UP_ARROW  &hrm RALT RIGHT  &trans  &trans
&trans  &kp EQUAL             &kp N1  &kp N2  &kp N3         &kp PLUS                 &trans    &kp B                  &kp G                &kp PERIOD       &trans  &trans
                                      &kp N0  &kp BACKSPACE  &trans                   &trans    &trans                 &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans  &trans  &trans  &kp AT                       &kp CARET        &kp DOLLAR        &kp LEFT_BRACE        &kp MINUS  &kp RIGHT_BRACE        &kp PIPE           &kp HASH
&trans  &trans  &trans  &trans  &hrm LEFT_SHIFT KP_MULTIPLY  &kp BACKSLASH    &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp COLON  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp DOUBLE_QUOTES
&trans  &trans  &trans  &trans  &trans                       &kp PLUS         &kp AMPERSAND     &kp LESS_THAN         &kp EQUAL  &kp GREATER_THAN       &kp QUESTION       &kp EXCLAMATION
                        &trans  &trans                       &trans           &kp SPACE         &trans                &kp TILDE
            >;
        };

        navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Nav";
            bindings = <
&kp F11  &kp F1        &kp F2        &kp F3         &kp F4         &kp F5     &kp LG(C)     &kp LG(V)     &kp LG(X)      &trans         &trans  &trans
&trans   &hrm LGUI F6  &hrm LALT F7  &hrm LCTRL F8  &hrm LSHFT F9  &kp F10    &kp LEFT      &kp DOWN      &kp UP_ARROW   &kp RIGHT      &trans  &trans
&trans   &kp LG(Z)     &kp LG(X)     &kp LG(C)      &kp LG(V)      &trans     &kp LG(LEFT)  &kp LA(LEFT)  &kp LA(RIGHT)  &kp LG(RIGHT)  &trans  &trans
                                     &trans         &trans         &trans     &trans        &trans        &trans
            >;
        };

        util_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };
    };
};
