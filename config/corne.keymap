/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        utils_layer {
            bindings = <&mo 3>;
            key-positions = <24 35>;
        };

        left_parens {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        right_parens {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        bracket_left {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };

        bracket_right {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 8>;
        };

        curly_left {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <15 16>;
        };

        curly_right {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <19 20>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <27 28>;
        };

        percent {
            bindings = <&kp LS(PERCENT)>;
            key-positions = <15 14>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <4 5>;
        };

        amps {
            bindings = <&kp AMPERSAND>;
            key-positions = <8 9>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <31 32>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <21 20>;
        };

        paste_vim {
            bindings = <&paste_vim>;
            key-positions = <10 9>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <34 33>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <7 6>;
        };

        two {
            bindings = <&kp NUMBER_2>;
            key-positions = <1 2>;
        };
    };

    macros {
        paste_vim: paste_vim {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp N0 &kp P>;
            label = "PASTE_VIM";
        };
    };

    behaviors {
        short_layer: short_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SHORT_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp GRAVE         &kp Q  &kp W  &kp E             &kp R          &kp T                   &kp Y        &kp U           &kp I            &kp O    &kp P     &kp F2
&mt LALT TAB      &kp A  &kp S  &kp D             &kp F          &kp G                   &kp H        &kp J           &kp K            &kp L    &kp SEMI  &kp SQT
&mt RSHIFT TILDE  &kp Z  &kp X  &kp C             &kp V          &kp B                   &kp N        &kp M           &kp COMMA        &kp DOT  &kp FSLH  &mt RMETA PIPE
                                &mt LEFT_META N0  &mt LCTRL ESC  &short_layer 1 SPACE    &lt 2 ENTER  &mt RCTRL BSPC  &mt RSHFT COLON
            >;
        };

        symbols_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Sym";
            bindings = <
&trans  &kp N1           &kp N2       &kp N3    &kp N4      &kp N5         &kp N6     &kp N7         &kp N8        &kp N9     &kp N0     &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp MINUS  &kp EQUAL  &trans
&trans  &trans           &trans       &trans    &trans      &trans         &trans     &trans         &trans        &trans     &trans     &trans
                                      &trans    &trans      &trans         &kp SPACE  &trans         &trans
            >;
        };

        navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Nav";
            bindings = <
&trans  &kp F1   &kp F2          &kp F3        &kp F4          &kp F5             &kp F6    &kp F7    &kp F8        &kp F9     &kp F10  &trans
&trans  &kp F11  &msc SCRL_LEFT  &msc SCRL_UP  &msc SCRL_DOWN  &msc SCRL_RIGHT    &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans   &trans
&trans  &kp F12  &trans          &trans        &trans          &trans             &trans    &trans    &trans        &trans     &trans   &trans
                                 &trans        &trans          &trans             &trans    &trans    &trans
            >;
        };

        util_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
